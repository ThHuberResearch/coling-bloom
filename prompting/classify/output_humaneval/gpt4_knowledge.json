[["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n    \"\"\" Check if in given list of numbers, are any two numbers closer to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n    False\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n    True\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef separate_paren_groups(paren_string: str) -> List[str]:\n    \"\"\" Input to this function is a string containing multiple groups of nested parentheses. Your goal is to\n    separate those group into separate strings and return the list of those.\n    Separate groups are balanced (each open brace is properly closed) and not nested within each other\n    Ignore any spaces in the input string.\n    >>> separate_paren_groups('( ) (( )) (( )( ))')\n    ['()', '(())', '(()())']\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef truncate_number(number: float) -> float:\n    \"\"\" Given a positive floating point number, it can be decomposed into\n    and integer part (largest integer smaller than given number) and decimals\n    (leftover part always smaller than 1).\n\n    Return the decimal part of the number.\n    >>> truncate_number(3.5)\n    0.5\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef below_zero(operations: List[int]) -> bool:\n    \"\"\" You're given a list of deposit and withdrawal operations on a bank account that starts with\n    zero balance. Your task is to detect if at any point the balance of account fallls below zero, and\n    at that point function should return True. Otherwise it should return False.\n    >>> below_zero([1, 2, 3])\n    False\n    >>> below_zero([1, 2, -4, 5])\n    True\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    \"\"\" For a given list of input numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n    Mean Absolute Deviation is the average absolute difference between each\n    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef intersperse(numbers: List[int], delimeter: int) -> List[int]:\n    \"\"\" Insert a number 'delimeter' between every two consecutive elements of input list `numbers'\n    >>> intersperse([], 4)\n    []\n    >>> intersperse([1, 2, 3], 4)\n    [1, 4, 2, 4, 3]\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef parse_nested_parens(paren_string: str) -> List[int]:\n    \"\"\" Input to this function is a string represented multiple groups for nested parentheses separated by spaces.\n    For each of the group, output the deepest level of nesting of parentheses.\n    E.g. (()()) has maximum two levels of nesting while ((())) has three.\n\n    >>> parse_nested_parens('(()()) ((())) () ((())()())')\n    [2, 3, 1, 3]\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef filter_by_substring(strings: List[str], substring: str) -> List[str]:\n    \"\"\" Filter an input list of strings only for ones that contain given substring\n    >>> filter_by_substring([], 'a')\n    []\n    >>> filter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a')\n    ['abc', 'bacd', 'array']\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List, Tuple\n\n\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\n    \"\"\" For a given list of integers, return a tuple consisting of a sum and a product of all the integers in a list.\n    Empty sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n    (0, 1)\n    >>> sum_product([1, 2, 3, 4])\n    (10, 24)\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List, Tuple\n\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    \"\"\" From a given list of integers, generate a list of rolling maximum element found until given moment\n    in the sequence.\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef is_palindrome(string: str) -> bool:\n    \"\"\" Test if given string is a palindrome \"\"\"\n    return string == string[::-1]\n\n\ndef make_palindrome(string: str) -> str:\n    \"\"\" Find the shortest palindrome that begins with a supplied string.\n    Algorithm idea is simple:\n    - Find the longest postfix of supplied string that is a palindrome.\n    - Append to the end of the string reverse of a string prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n    'catac'\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef string_xor(a: str, b: str) -> str:\n    \"\"\" Input are two strings a and b consisting only of 1s and 0s.\n    Perform binary XOR on these inputs and return result also as a string.\n    >>> string_xor('010', '110')\n    '100'\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List, Optional\n\n\ndef longest(strings: List[str]) -> Optional[str]:\n    \"\"\" Out of list of strings, return the longest one. Return the first one in case of multiple\n    strings of the same length. Return None in case the input list is empty.\n    >>> longest([])\n\n    >>> longest(['a', 'b', 'c'])\n    'a'\n    >>> longest(['a', 'bb', 'ccc'])\n    'ccc'\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef all_prefixes(string: str) -> List[str]:\n    \"\"\" Return list of all prefixes from shortest to longest of the input string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef string_sequence(n: int) -> str:\n    \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n    >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef count_distinct_characters(string: str) -> int:\n    \"\"\" Given a string, find out how many distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n\nClassification:\n"], ["Procedural", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n    \"\"\"\n\nClassification:\n"]]