[["The given problem can be classified into the **Procedural** category of Bloom's taxonomy.\n\nProcedural knowledge refers to how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods. In this case, the problem requires the implementation of a function that checks if there are any two numbers in a given list that are closer to each other than a specified threshold. This involves the application of a specific algorithm or technique to solve the problem, which is a characteristic of procedural knowledge.\n\nThe problem does not require the understanding of the underlying conceptual relationships (Conceptual knowledge) or the basic elements of the problem (Factual knowledge). Additionally, it does not involve the awareness or knowledge of one's own cognitive processes (Metacognitive knowledge).\n\nTherefore, the classification of the given problem is **Procedural** in the Knowledge dimension of Bloom's taxonomy.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n    \"\"\" Check if in given list of numbers, are any two numbers closer to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n    False\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n    True\n    \"\"\"\n\nClassification:\n"], ["The given problem can be classified under the **Procedural** category of Bloom's taxonomy.\n\nProcedural knowledge refers to knowledge about how to do something, including methods, techniques, and algorithms. In this case, the problem requires the learner to write code for a function that separates groups of nested parentheses in a given string into separate strings, which involves following a specific procedure or algorithm to achieve the desired output.\n\nThe problem statement provides a clear description of the task, including the input and expected output, and the learner is expected to understand and apply the appropriate programming techniques and methods to solve the problem.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef separate_paren_groups(paren_string: str) -> List[str]:\n    \"\"\" Input to this function is a string containing multiple groups of nested parentheses. Your goal is to\n    separate those group into separate strings and return the list of those.\n    Separate groups are balanced (each open brace is properly closed) and not nested within each other\n    Ignore any spaces in the input string.\n    >>> separate_paren_groups('( ) (( )) (( )( ))')\n    ['()', '(())', '(()())']\n    \"\"\"\n\nClassification:\n"], ["The problem of writing the `truncate_number` function can be classified as **Procedural** knowledge in Bloom's taxonomy.\n\nProcedural knowledge refers to \"how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\" In this case, the task of writing the `truncate_number` function involves the implementation of a specific algorithm or technique to extract the decimal part of a given floating-point number.\n\nThe problem statement provides a clear description of the desired behavior, and the implementation requires the programmer to understand the process of decomposing a floating-point number into its integer and decimal parts, and then returning the decimal part. This knowledge of the specific steps or procedure to achieve the desired outcome falls under the Procedural knowledge dimension of Bloom's taxonomy.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef truncate_number(number: float) -> float:\n    \"\"\" Given a positive floating point number, it can be decomposed into\n    and integer part (largest integer smaller than given number) and decimals\n    (leftover part always smaller than 1).\n\n    Return the decimal part of the number.\n    >>> truncate_number(3.5)\n    0.5\n    \"\"\"\n\nClassification:\n"], ["The given problem can be classified as **Procedural** knowledge in Bloom's taxonomy.\n\nProcedural knowledge is concerned with how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods. In this case, the problem requires the implementation of a specific algorithm or technique to determine if the balance of a bank account ever falls below zero based on a list of deposit and withdrawal operations.\n\nThe function `below_zero` takes a list of integers representing the operations performed on the bank account, and it needs to return `True` if the balance ever falls below zero, and `False` otherwise. This task involves the application of a specific procedure or algorithm to solve the problem, which is the core of the Procedural knowledge category in Bloom's taxonomy.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef below_zero(operations: List[int]) -> bool:\n    \"\"\" You're given a list of deposit and withdrawal operations on a bank account that starts with\n    zero balance. Your task is to detect if at any point the balance of account fallls below zero, and\n    at that point function should return True. Otherwise it should return False.\n    >>> below_zero([1, 2, 3])\n    False\n    >>> below_zero([1, 2, -4, 5])\n    True\n    \"\"\"\n\nClassification:\n"], ["The given problem of implementing the `mean_absolute_deviation` function can be classified under the **Procedural** knowledge dimension of Bloom's taxonomy.\n\nProcedural knowledge refers to \"how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\" In this case, the task involves writing code to implement a specific algorithm (calculating the Mean Absolute Deviation) using the provided Python function signature and docstring.\n\nThe problem does not require the student to have any prior knowledge about the conceptual understanding of Mean Absolute Deviation or the underlying mathematical principles. Instead, it focuses on the procedural aspect of implementing the algorithm to compute the desired statistic.\n\nTherefore, the classification of this problem would be **Procedural** knowledge in the context of Bloom's taxonomy.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    \"\"\" For a given list of input numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n    Mean Absolute Deviation is the average absolute difference between each\n    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n    \"\"\"\n\nClassification:\n"], ["The given problem of writing code for the `intersperse` function can be classified as **Procedural** knowledge in Bloom's taxonomy.\n\nProcedural knowledge refers to the \"how-to\" knowledge, which includes the methods, techniques, and algorithms for completing a task. In this case, the problem requires the programmer to write the code to implement the specific algorithm of inserting a delimiter between consecutive elements of a list.\n\nThe problem description provides the necessary information to understand the input and output of the function, as well as some example usage. This information is sufficient for a programmer to determine the steps needed to implement the desired functionality, which is the core of procedural knowledge.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef intersperse(numbers: List[int], delimeter: int) -> List[int]:\n    \"\"\" Insert a number 'delimeter' between every two consecutive elements of input list `numbers'\n    >>> intersperse([], 4)\n    []\n    >>> intersperse([1, 2, 3], 4)\n    [1, 4, 2, 4, 3]\n    \"\"\"\n\nClassification:\n"], ["The given problem can be classified into the **Procedural** category of Bloom's taxonomy.\n\nProcedural knowledge refers to the knowledge of how to do something, including methods, techniques, and algorithms. In this case, the problem requires the implementation of a function that can parse a string representing nested parentheses and return the deepest level of nesting for each group.\n\nThe problem statement provides a clear description of the task and the expected input and output format. To solve this problem, the programmer needs to have knowledge of string processing, stack data structures, and the ability to apply appropriate algorithms and techniques to solve the problem.\n\nThe implementation of the `parse_nested_parens` function involves the use of a stack data structure and a step-by-step procedure to determine the deepest level of nesting for each group of parentheses. This aligns with the Procedural category of Bloom's taxonomy, which focuses on the knowledge of methods, techniques, and procedures to perform a specific task.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef parse_nested_parens(paren_string: str) -> List[int]:\n    \"\"\" Input to this function is a string represented multiple groups for nested parentheses separated by spaces.\n    For each of the group, output the deepest level of nesting of parentheses.\n    E.g. (()()) has maximum two levels of nesting while ((())) has three.\n\n    >>> parse_nested_parens('(()()) ((())) () ((())()())')\n    [2, 3, 1, 3]\n    \"\"\"\n\nClassification:\n"], ["The given problem of writing a function `filter_by_substring` that filters a list of strings based on the presence of a given substring can be classified as **Procedural** knowledge in the Bloom's Taxonomy.\n\nProcedural knowledge is concerned with how to do something, the methods or techniques used to accomplish a task. In this case, the function requires the programmer to write code that implements the logic to filter the list of strings based on the given substring. It involves the use of programming methods, techniques, and algorithms to achieve the desired outcome.\n\nThe function takes a list of strings and a substring as input, and returns a new list containing only the strings that contain the given substring. This requires the programmer to understand and apply the appropriate programming constructs, such as looping through the list, checking each string for the presence of the substring, and adding the matching strings to the output list.\n\nTherefore, the classification of this problem in the Bloom's Taxonomy would be Procedural knowledge, as it focuses on the methods and techniques required to solve the problem, rather than the conceptual understanding or factual knowledge about the problem domain.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef filter_by_substring(strings: List[str], substring: str) -> List[str]:\n    \"\"\" Filter an input list of strings only for ones that contain given substring\n    >>> filter_by_substring([], 'a')\n    []\n    >>> filter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a')\n    ['abc', 'bacd', 'array']\n    \"\"\"\n\nClassification:\n"], ["The given problem can be classified as **Procedural** knowledge in Bloom's taxonomy.\n\nThe problem requires the learner to write code for a specific function, which involves the application of programming techniques, methods, and algorithms to achieve the desired output. The problem description provides the function signature, docstring, and expected behavior, which the learner needs to understand and translate into a working implementation.\n\nProcedural knowledge refers to the \"how-to\" knowledge, which includes the methods, techniques, and algorithms used to perform a task or solve a problem. In this case, the learner needs to have the necessary programming skills and knowledge to write the code for the `sum_product` function, which involves iterating through the input list, performing the sum and product calculations, and returning the results as a tuple.\n\nThe problem does not require the learner to have a deep understanding of the underlying concepts or the interrelationships between the elements (Conceptual knowledge), nor does it focus on the basic elements that the learner must know (Factual knowledge). Additionally, the problem does not involve knowledge about cognition or one's own thought processes (Metacognitive knowledge).\n\nTherefore, the given problem can be classified as belonging to the **Procedural** knowledge dimension of Bloom's taxonomy.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List, Tuple\n\n\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\n    \"\"\" For a given list of integers, return a tuple consisting of a sum and a product of all the integers in a list.\n    Empty sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n    (0, 1)\n    >>> sum_product([1, 2, 3, 4])\n    (10, 24)\n    \"\"\"\n\nClassification:\n"], ["The problem of writing code for the `rolling_max` function can be classified as **Procedural** knowledge in Bloom's taxonomy.\n\nProcedural knowledge refers to \"how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\" In this case, the task involves implementing an algorithm to generate a list of rolling maximum elements from a given list of integers. The problem statement provides a clear description of the required functionality, and the implementation involves the use of specific programming techniques and methods to achieve the desired output.\n\nThe key aspects of the problem that align with the Procedural knowledge category are:\n\n1. The task requires the implementation of a specific algorithm or technique (generating a list of rolling maximum elements).\n2. It involves the use of programming skills, methods, and techniques to write the necessary code.\n3. The problem statement provides the criteria for the desired output, which the implementation needs to fulfill.\n\nTherefore, the classification of this task into Bloom's taxonomy would be Procedural knowledge, as it focuses on the \"how-to\" aspect of implementing the rolling maximum function.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List, Tuple\n\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    \"\"\" From a given list of integers, generate a list of rolling maximum element found until given moment\n    in the sequence.\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n\nClassification:\n"], ["The given problem can be classified into the **Procedural** category of Bloom's taxonomy.\n\nThe functions `is_palindrome` and `make_palindrome` demonstrate how to perform specific tasks (i.e., testing if a string is a palindrome and finding the shortest palindrome that begins with a supplied string) using specific methods and techniques.\n\nThe `is_palindrome` function utilizes the string slicing technique `string[::-1]` to reverse the input string and compare it with the original string to determine if it is a palindrome.\n\nThe `make_palindrome` function implements a specific algorithm to find the shortest palindrome that begins with the supplied string. It involves finding the longest palindromic suffix of the input string and appending the reverse of the prefix that comes before the palindromic suffix.\n\nThese functions demonstrate the procedural knowledge of how to perform these specific tasks, including the methods, techniques, and algorithms involved. They do not focus on the conceptual understanding or the broader context of palindromes, but rather on the specific steps and procedures required to solve these problems.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef is_palindrome(string: str) -> bool:\n    \"\"\" Test if given string is a palindrome \"\"\"\n    return string == string[::-1]\n\n\ndef make_palindrome(string: str) -> str:\n    \"\"\" Find the shortest palindrome that begins with a supplied string.\n    Algorithm idea is simple:\n    - Find the longest postfix of supplied string that is a palindrome.\n    - Append to the end of the string reverse of a string prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n    'catac'\n    \"\"\"\n\nClassification:\n"], ["The given problem of writing the code for the `string_xor` function can be classified into the **Procedural** category of Bloom's taxonomy.\n\nThe Procedural knowledge category in Bloom's taxonomy refers to \"how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\" In this case, the task requires the implementation of a specific algorithm or technique (binary XOR operation) to solve the problem, which aligns with the Procedural knowledge dimension.\n\nThe problem statement provides a clear description of the inputs, the desired output, and the expected behavior of the function, which are the necessary components for implementing the solution. The task does not require the understanding of the conceptual relationships between the basic elements or the broader context of the problem (Conceptual knowledge). It also does not involve any metacognitive awareness or knowledge about one's own cognition (Metacognitive knowledge). Furthermore, the problem does not solely focus on the basic elements or facts that the student must know (Factual knowledge).\n\nTherefore, the given problem of writing the code for the `string_xor` function can be classified into the Procedural knowledge dimension of Bloom's taxonomy.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef string_xor(a: str, b: str) -> str:\n    \"\"\" Input are two strings a and b consisting only of 1s and 0s.\n    Perform binary XOR on these inputs and return result also as a string.\n    >>> string_xor('010', '110')\n    '100'\n    \"\"\"\n\nClassification:\n"], ["Based on the Bloom's taxonomy categories provided, the given problem of writing code for the `longest` function can be classified as **Procedural** knowledge.\n\nThe reason for this classification is that the problem requires the implementation of a specific method or algorithm to determine the longest string from a list of strings. It involves the \"how to\" aspect of solving the problem, which is the core of procedural knowledge.\n\nThe problem statement provides the necessary details and constraints for the function, including the input and output types, as well as some example usage cases. This information guides the implementation of the function, which is the focus of the task.\n\nThe procedural knowledge in this case encompasses the specific steps or techniques required to write the code to solve the problem, such as iterating through the list of strings, comparing their lengths, and returning the appropriate result based on the given requirements.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List, Optional\n\n\ndef longest(strings: List[str]) -> Optional[str]:\n    \"\"\" Out of list of strings, return the longest one. Return the first one in case of multiple\n    strings of the same length. Return None in case the input list is empty.\n    >>> longest([])\n\n    >>> longest(['a', 'b', 'c'])\n    'a'\n    >>> longest(['a', 'bb', 'ccc'])\n    'ccc'\n    \"\"\"\n\nClassification:\n"], ["The given problem of implementing the `greatest_common_divisor` function can be classified into the **Procedural** category of Bloom's taxonomy.\n\nProcedural knowledge refers to the knowledge of how to do something, the methods of inquiry, and the criteria for using skills, algorithms, techniques, and methods. In this case, the task of writing the code for the `greatest_common_divisor` function requires the understanding of the algorithm or procedure to find the greatest common divisor of two integers.\n\nThe problem statement provides a clear description of the task, which is to implement a function that returns the greatest common divisor of two integers. This involves understanding the underlying algorithm (e.g., Euclidean algorithm) and translating it into a working code implementation. The provided example usage and docstring further reinforce the procedural nature of the task, as they guide the implementation of the desired functionality.\n\nTherefore, the classification of this problem into Bloom's taxonomy would be the **Procedural** category, as it requires the knowledge and application of a specific procedure or algorithm to solve the given problem.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\nClassification:\n"], ["The given problem of writing code for the `all_prefixes` function can be classified as **Procedural** knowledge in Bloom's taxonomy.\n\nProcedural knowledge refers to \"how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\" In this case, the task involves writing code to implement a specific algorithm (generating all prefixes of a given string) using programming techniques and methods.\n\nThe description of the function, including the docstring and the example usage, provides the necessary information to understand the problem and the expected output. To solve this problem, the programmer needs to have knowledge of programming concepts, such as string manipulation, list manipulation, and control flow, as well as the ability to apply these concepts to implement the desired functionality.\n\nTherefore, the given problem can be classified as Procedural knowledge in Bloom's taxonomy, as it requires the learner to demonstrate their ability to apply programming techniques and methods to solve a specific problem.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef all_prefixes(string: str) -> List[str]:\n    \"\"\" Return list of all prefixes from shortest to longest of the input string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']\n    \"\"\"\n\nClassification:\n"], ["The given problem of writing a function `string_sequence(n: int) -> str` can be classified under the **Procedural** category of Bloom's taxonomy.\n\nProcedural knowledge refers to the knowledge of how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods. In this case, the task involves writing a function that generates a string containing space-delimited numbers starting from 0 up to n inclusive, which requires the knowledge of programming techniques and the ability to implement an algorithm to achieve the desired output.\n\nThe problem requires the learner to have the necessary programming skills and knowledge of constructs such as loops, string manipulation, and function definition to implement the desired functionality. It does not involve higher-level cognitive processes like evaluation, synthesis, or creation, but rather the application of procedural knowledge to solve a specific problem.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef string_sequence(n: int) -> str:\n    \"\"\" Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n    >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \"\"\"\n\nClassification:\n"], ["The problem you provided, which is to write code for the `count_distinct_characters` function, can be classified under the **Procedural** knowledge dimension of Bloom's taxonomy.\n\nProcedural knowledge refers to \"how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\" In this case, the task involves implementing an algorithm or a method to count the number of distinct characters in a given string, regardless of case.\n\nThe problem requires the understanding of programming concepts, such as data structures, string manipulation, and control flow, to develop the logic and implement the solution. It also involves the application of programming skills and techniques to write the actual code.\n\nTherefore, the classification of this problem falls under the Procedural knowledge dimension of Bloom's taxonomy, as it involves the understanding and application of the necessary procedures and methods to solve the problem.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef count_distinct_characters(string: str) -> int:\n    \"\"\" Given a string, find out how many distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\n\nClassification:\n"], ["The given problem can be classified into the **Procedural** category of Bloom's taxonomy.\n\nProcedural knowledge refers to \"how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\" In this case, the problem requires the implementation of a specific algorithm or procedure to parse the input music string and return a list of integers representing the duration of each note.\n\nThe problem provides a clear description of the input format and the expected output, along with a legend explaining the different note types and their durations. This information serves as the \"criteria for using skills, algorithms, techniques, and methods\" to solve the problem.\n\nThe task of writing the code to implement the parsing logic falls under the \"how to do something\" aspect of procedural knowledge. The problem does not require the understanding of the underlying music theory or the conceptual relationships between the note types. Instead, it focuses on the procedural steps needed to transform the input string into the desired output list.\n\nTherefore, the given problem can be classified as a Procedural knowledge task in the context of Bloom's taxonomy.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"\n\nClassification:\n"], ["The given problem of writing a function to count the number of times a given substring appears in a string can be classified under the **Procedural** category of Bloom's taxonomy.\n\nThe Procedural category in Bloom's taxonomy refers to the knowledge of how to do something, the methods of inquiry, and the criteria for using skills, algorithms, techniques, and methods. In this case, the problem requires the implementation of a specific algorithm or technique (in this case, a string-matching algorithm) to achieve the desired outcome of counting the occurrences of a substring within a larger string.\n\nThe problem does not involve any explicit metacognitive, conceptual, or factual knowledge. It is focused on the procedural aspect of writing a function to solve the given problem, which aligns with the Procedural category of Bloom's taxonomy.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\n\n\ndef how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"\n\nClassification:\n"], ["The given problem can be classified under the **Procedural** knowledge dimension of Bloom's taxonomy.\n\nProcedural knowledge refers to \"how to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\" In this case, the problem requires the student to write code for a function that takes a space-delimited string of numerals and returns the string with the numbers sorted from smallest to largest. This involves the implementation of a sorting algorithm, which is a procedural skill.\n\nThe problem does not require the student to have knowledge about the underlying conceptual relationships between the numbers or their numerical values (Conceptual knowledge). It also does not require the student to have knowledge about the general characteristics of numbers or numerical systems (Factual knowledge). Additionally, the problem does not involve the student's awareness or regulation of their own cognitive processes (Metacognitive knowledge).\n\nTherefore, the classification of this problem is Procedural knowledge, as it focuses on the implementation of a specific task or algorithm to solve the problem.", "Your task is to classify tasks into the Knowledge dimension of Bloom's taxonomy. The classes and their description are provided below:\nMetacognitive: Knowledge of cognition in general as well as awareness and knowledge of one's own cognition.\n\nProcedural: How to do something, methods of inquiry, and criteria for using skills, algorithms, techniques, and methods.\n\nConceptual: The interrelationships among the basic elements within a larger structure that enable them to function together.\n\nFactual: The basic elements students must know to be acquainted with a discipline or solve problems in it.\nClassify the following problem into the corresponding category of Bloom's taxonomy:\nWrite code for the following function:\nfrom typing import List\n\n\ndef sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n    \"\"\"\n\nClassification:\n"]]